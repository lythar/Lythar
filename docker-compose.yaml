secrets:
  db_password:
    file: ./secrets/db_password.txt
  jwt_private:
    file: ./secrets/jwt_private.pem
  jwt_public:
    file: ./secrets/jwt_public.pem

networks:
  internal:
    ipam:
      config:
        - subnet: 172.22.0.0/24
  bridge:
    driver: bridge

services:
  api:
    image: api
    container_name: api

    build:
      context: ${BACKEND_PATH}
      dockerfile: LytharBackend/Dockerfile

    environment:
      Jwt__PrivateKey: /run/secrets/jwt_private
      Jwt__PublicKey: /run/secrets/jwt_public
      DatabaseContext__AutoRunMigrations: true
      LocalFileService__RootPath: /var/lib/lythar/uploads
      ASPNETCORE_HTTP_PORTS: 5505
      Ldap__Host: 172.22.0.8

    volumes:
      - ./uploads:/var/lib/lythar/uploads

    ports:
      - "5505:5505"

    secrets:
      - db_password
      - jwt_private
      - jwt_public

    restart: always

    depends_on:
      db:
        condition: service_healthy
      ldap:
        condition: service_started

    networks:
      internal:
        ipv4_address: 172.22.0.6
      bridge:

  frontend:
    container_name: frontend

    build:
      context: ${FRONTEND_PATH}
      dockerfile: prod.Dockerfile

    environment:
      NEXT_PUBLIC_ORGANIZATION_NAME: ${NEXT_PUBLIC_ORGANIZATION_NAME}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}

    depends_on:
      - api

    networks:
      internal:
        ipv4_address: 172.22.0.7
      bridge:

    restart: always

  ldap:
    image: osixia/openldap:1.5.0
    container_name: ldap
    restart: always

    environment:
      LDAP_ORGANISATION: "Lythar"
      LDAP_DOMAIN: "lythar.org"
      LDAP_ADMIN_PASSWORD: "admin_pass"
      LDAP_ADMIN_DN: "cn=admin,dc=lythar,dc=org"
      BASE_DN: "cn=admin,dc=lythar,dc=org"
    ports:
      - "389:389"
      - "636:636"
    networks:
      internal:
        ipv4_address: 172.22.0.8


  db:
    image: postgres:16
    container_name: database
    restart: always

    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "lythar", "-U", "postgres" ]
      interval: 5s
      timeout: 10s
      retries: 120

    environment:
      POSTGRES_DB: "lythar"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345"

    volumes:
      - ./postgres:/var/lib/postgresql/data

    secrets:
      - db_password

    ports:
      - "5432"

    networks:
      internal:
        ipv4_address: 172.22.0.9

  proxy:
    image: nginx:alpine
    container_name: proxy
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./nginx:/etc/nginx/
      - ./nginx/logs:/var/log/nginx/
    depends_on:
      - api
      - frontend
    networks:
      - internal
      - bridge
